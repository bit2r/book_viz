[{"path":"index.html","id":"데이터-시각화","chapter":"1 .  데이터 시각화","heading":"1 .  데이터 시각화","text":"디지털 불평등 해소를 위해 제작중인 오픈 통계패키지 개발과 고품질 콘텐츠 제작에 큰 힘이 됩니다.","code":"  - 하나은행 448-910057-06204\n  - 사단법인 한국알사용자회"},{"path":"hello-world.html","id":"hello-world","chapter":"2 .  헬로우 월드","heading":"2 .  헬로우 월드","text":"","code":""},{"path":"hello-world.html","id":"napoleon-invasion","chapter":"2 .  헬로우 월드","heading":"2.1 나폴레옹 러시아 침공","text":"나폴레옹 황제가 프랑스를 통치할 때 1812년 최대 전성기를 구가했다.최대 전성기를 구가하던 1812년 나폴레옹은 러시아 침공을 감행했다. 나폴레옹의\n러시아침공은 데이터 시각화의 역작을 남기는 계기가 되기도 했다.\n미나르는 프랑스의 러시아 침공을 군더더기 없이 시작부터 폐퇴하여 돌아온 과정까지 간략하게 표현했다.미나르 데이터 시각화의 지명을 자세히 보면 프랑스의 러시아 침공에 대해 대략적으로\n인식하고 있는 것과 다소 차이가 난다. 통상 프랑스 수도 파리에서 나폴레옹 대군이\n출발하여 러시아 모스코바에서 한동안 머물다가 다시 수도 파리로 돌아와서 황제에서\n끌어내려져 엘바섬으로 위배를 떠난 것으로 알려져 있지만 실제 미나르가 데이터에\n기반하여 제작한 시각화 그래프에는 진실이 담겨있다. 1","code":""},{"path":"hello-world.html","id":"napoleon-viz","chapter":"2 .  헬로우 월드","heading":"2.2 시각화","text":"","code":""},{"path":"hello-world.html","id":"references","chapter":"2 .  헬로우 월드","heading":"2.3 참고서적","text":"영어로 참고할 오픈 데이터 시각화 교재(Healy 2018)(Dougherty Ilyankou 2021)(Wilke 2019)","code":""},{"path":"시각화-개요.html","id":"시각화-개요","chapter":"시각화 개요","heading":"시각화 개요","text":"","code":""},{"path":"viz-font.html","id":"viz-font","chapter":"3 .  글꼴","heading":"3 .  글꼴","text":"R을 단순히 통계 언어로 생각하지 말고 적용범위를 확대해서 활용하면\n데이터 과학 산출물을 다양한 전자문서로 제작하여 커뮤니케이션 할 수 있다.\nPDF, HTML, 워드 등 문서 뿐만 아니라, 파워포인트 같은 발표자료를\n슬라이드로 제작하여 배포할 수 있다. 그래프 문법(Grammar Graphics)에 따라\nggplot 시각화를 산출물에도 다양한 글꼴(font)을 반영하여 좀더 관심을 끌 수 있는\n그래프 제작도 가능하다. 데이터 과학자나 개발자 관점에서도 통합개발환경(IDE)이\n필요한데 개발과 저작에 집중할 수 있는 글꼴을 지정하여 활용할 경우\n생산성도 높일 수 있고 좀더 쾌적한 환경에서 개발을 진행할 수 있다.R 스크립트 작성을 위한 글꼴과 그래프에 한글 글꼴(font)을 적용한다.\nggplot을 비롯한 시각화를 위해 extrafont와 showtext 패키지를\n활용하여 적절한 한글 글꼴을 사용할 뿐만 아니라 코딩 개발할 때\nR 스크립트(.R) 및 R마크다운(.Rmd)에서도 적절한 한글글꼴 사용을 위해서\n코딩관련 글꼴도 설치한다.기본적인 작업흐름은 운영체제에 먼저 외부에서 가져온 폰트를 설치한다.\n그리고 나서 extrafont 팩키지 font_import() 함수를 사용해서 폰트를\nR에서 불러 사용할 수 있도록 설치한다. 그리고 나서 loadfonts() 함수를\n사용해서 글꼴을 ggplot등에서 불러 사용한다.\n구글 글꼴을 사용하고자 할 경우 showtext 패키지를\n사용해서 로컬 컴퓨터에 설치하여 적용한다.R 폰트/글꼴 설치","code":""},{"path":"viz-font.html","id":"font-coding","chapter":"3 .  글꼴","heading":"3.1 R 코딩 글꼴","text":"문서를 위해 작성하는데 사용되는 글꼴과 R 코딩을 위해 사용되는 글꼴은\n차이가 난다. 왜냐하면 R 코딩에 사용되는 글꼴은 가독성이 좋아야하고\n디버깅에 용이해야 된다. 영어는 consolas 글꼴을 많이 사용하는데 무료가\n아니다. 그래서 consolas에서 영감을 받은 SIL 오픈 폰트 라이선스를\n따르는 Inconsolata가 R\n코딩에 많이 사용되고 있다. 하지만, R코드를 작성할 때 주석을 한글로\n달거나 R마크다운 작업을 할 경우 유사한 기능을 하는 한글 글꼴이 필요하다.네이버 나눔고딕 코딩글꼴D2 Coding 글꼴“네이버 나눔고딕 코딩글꼴”과 “D2 Coding 글꼴”을 설치하고 나서 RStudio\nIDE에서 “Tools” → “Global Options…”를 클릭하면 “Options”창에서\nAppearance에서 Editor font:에서 설치한 코딩전용 글꼴을 선택하고\nEditor theme:도 지정한다.D2 코딩폰트 설치","code":""},{"path":"viz-font.html","id":"r-viz-font","chapter":"3 .  글꼴","heading":"3.2 ggplot 시각화 글꼴","text":"extrafont 팩키지에서 font_import() 함수로 운영체제(윈도우/리눅스)에\n설치된 글꼴을 R로 가져온다. 그리고 나서 loadfonts() 함수를 사용해서\n설치된 글꼴을 사용하는 작업흐름을 따르게 된다.","code":""},{"path":"viz-font.html","id":"font-viz-font-example","chapter":"3 .  글꼴","heading":"3.2.1 ggplot 한글 글꼴 사례","text":"extrafont 패키지 loadfonts() 함수를 사용해서 ggplot에서 적용시킬 수 있는\n글꼴을 불러냈다. R 내장 데이터셋 iris를 사용하여 나눔글꼴 “Nanum Pen Script”을 기본 글꼴로 적용시켰다.","code":""},{"path":"viz-font.html","id":"font-showtext","chapter":"3 .  글꼴","heading":"3.3 showtext 패키지 2","text":"extrafont 패키지를 통해 한자를\n포함한 한글을 처리할 수 있었으나, extrafont는 트루타입폰트(.ttf)를\nPDF 그래픽 장치에 초점을 맞춰 개발이 되었다. 따라서, 데이터과학\n최종산출물이 PDF 형태 책이 아닌 경우 여러가지 면에서 다양한 한글 글꼴을\n표현하는데 있어 한계가 있다.새로 개발된 showtext\n팩키지는 Ghostscript같은 외부 소프트웨어를 활용하지 않고도 다양한\n(그래픽) 글꼴을 지원한다. showtext로\nR 그래프를 생성할 때, 다양한 글꼴(TrueType, OpenType, Type 1, web fonts\n등)을 지원한다.과거 PDF와 같은 책형태로 정보를 공유하고 전달하는 방식이 주류를 이뤘다면\n인터넷 등장 이후 웹으로 정보 생성과 소비가 주류로 떠오르게 되면서 글꼴에도\n변화가 생겼다. 가까운 미래에는 웹을 우선시하는 글꼴이 대세를 이룰 것으로 보인다.showtext 글꼴사용자가 그래프에 텍스트를 넣기 위해 R 함수에서 text()를 호출할 때\nshowtext가 활성화 되어 있으면 showtext 팩키지 text() 함수를\n호출해서 그래픽 혹은 이미지 파일에 텍스트를 표현하고 그렇지 않는 경우는\n디폴트 장치함수 text() 함수를 호출하게 되어 있다.내부적으로 상세 작동 로직은 글꼴 위치를 파악해서 글리프(glyph) 정보를\n추출하고 비트맵 형식, 벡터그래픽 형식에 따라서 비트맵일 경우 raster()\n장치함수를 호출하고, 벡터그래픽인 경우 path() 장치함수를 호출해서\n기능을 수행한다.","code":""},{"path":"viz-font.html","id":"showtext-korean-example","chapter":"3 .  글꼴","heading":"3.3.1 R 설치 글꼴 확인","text":"extrafont 팩키지 loadfonts() 함수를 통해 .ttf 파일 정보를\n확인한다. 현재 구글 글끌 페이지에서 많은 한글\n글꼴을 지원하지 않고 있다. 구글에서 전세계 글꼴을 지원하다보 동아시아 3국 대상으로\n지원되는 글꼴은 적은 것으로 보인다.","code":""},{"path":"viz-font.html","id":"font-showtext-korean-example-ggplot","chapter":"3 .  글꼴","heading":"3.3.2 ggplot 글꼴 적용","text":"한글 글꼴을 바로 적용하기에 앞서 showtext 패키지 포함된 영문글꼴 적용 사례를 먼저 돌려보자.\nggplot 그래픽에 적용되는 showtext 활용 기본 작업흐름은 다음과 같다.글꼴을 적재한다.그래픽 장치를 연다showtext를 통해 텍스트를 표시한다고 지정한다.그래프를 그린다.장치를 닫는다.","code":""},{"path":"viz-font.html","id":"font-showtext-korean-example-ttf","chapter":"3 .  글꼴","heading":"3.4 로컬 글꼴 적용","text":"로컬 컴퓨터에 저장된 .ttf 파일을 사용자 지정해서 가져온 후 이를\nggplot에 반영하여 한글을 R 그래프에 적용하는 것도 가능하다.\nshowtext는 extrafont 보다 나중에 개발되어 extrafont가\n로컬 컴퓨터에 설치된 글꼴을 ggplot에 구현되는데 전력을 다했다면\nshowtext는 이를 발판으로 나중에 개발되어 구글 폰트와 같은\n인터넷 글꼴과 최근 웹출판에 대한 개념도 넣어 개발된 것이 차이점이다.","code":""},{"path":"viz-color.html","id":"viz-color","chapter":"4 .  색상","heading":"4 .  색상","text":"","code":""},{"path":"viz-color.html","id":"color-mechanism","chapter":"4 .  색상","heading":"4.1 시각화 메커니즘 3","text":"크게 보면 기계 즉, 컴퓨터가 색을 이해하고 표현하는 RGB 체계와 사람이 색을 인지하고 이해하는 HCL 체계로 나누어 진다. 2진수로 표현된 시각적 데이터는 RGB 16진수로 변환되어 모니터에 표시되고,\n물리적 광자(photon)로 사람눈에 위치한 망막에 꽂히게 되고,\n사람은 뇌에서 인지한 후에 이를 처리하여 시각적인 정보를 인식하게 된다.따라서, 사람뇌에 인식할 수 있는 시각적인 정보로 데이터를 구성해야만 다양한 종류의 모니터를 통해\n효율적이고 효과적으로 정보가 전달될 수 있다.시각적 인지 메커니즘","code":""},{"path":"viz-color.html","id":"color-dataviz-mechanism-rgb","chapter":"4 .  색상","heading":"4.1.1 16진수 RGB 표색법","text":"양수 숫자나 크레파스 명칭 대신에, 일반적이고 컴퓨터가 읽어들일 수 있는 색상 표색법이 16진수 팔레트다.\nCynthia Brewer 는 펜실베니아 대학에서 교수로 색상이론과 시각화에 관련된 전문분야를 갖고 있으며 특히,\nColorBrewer 으로 알려진 색생체계는 웹, 출판, 색맹을 고려하여 널리 쓰이고 있다.\nColorBrewer 색상체계를 R에서 시각화를 할 때 사용될 수 있게 만든 것이 RColorBrewer 패키지다.\nRColorBrewer Dark2 팔레트를 통해 실제로 구현된 색상체계를 살펴보자.# 기호는 관례로 붙이는 것이고, 16진수 문자열을 다음과 같이 파싱한다:\n#rrggbb에서 rr, gg, bb 각각은 적색, 녹색, 청색 채널에 대한 생상농도를 나타낸다.\n각 색상은 2를 밑으로 하는 16개 숫자를 나타내고, “16진수(hexadecimal)” 혹은 줄여서 헥스(hex)로 부른다.\n다음에 밑을 10으로 하는 십진수와 16진수 비교표가 다음에 나와 있다.예를 들어, 팔렛트 첫 색상이 #1B9E77으로 명세되어 있다. 따라서, 녹색 채널 색상농도는 9E가 된다.\\[ 9E = 9 * 16^1 + 14 * 16^0 = 9 * 16 + 14 = 158 \\]무슨 뜻일까? 해당 채널의 가장 낮은 값은 00=0 이 되고,\n가장 높은 값은 FF=255 가 된다.도움이 되는 기억해야될 중요한 사례가 다음에 나타나 있다.\n적색, 녹색, 청색에 대한 강렬한 RGB 색상은 다음과 같다.다음에 흑백, 회색을 표현한 것이 나타나 있다.“gray” 회색으로 치환하게 되면, “gray”를 보게되는 어느 곳에서나 동일한 결과를 얻게 됨에 주목한다.\n모든 채널을 최대값으로 하면 흰색, 모든 채널을 최소값으로 하면 검정색이 된다.R에서 색상을 지정하는 방법양의 정수: palette()함수로 조작하거나 검색한 현재 색상 팔레트에 인덱스를 사용.색상 명칭: colors() 함수로 검색된 색상16진수 문자열: 16진수로 구성된 3개조에 추가해서, 알파 투명도를 나타내는 네번째 채널을 넣어 16진수 4개조로 구성된 생상표로 확장하기도 한다.rgb(), col2rgb(), convertColor() 함수도 유용하니, 자세한 내용은 도움말을 참조한다.","code":"\nlibrary(RColorBrewer)\nbrewer.pal(n = 8, name = \"Dark2\")## [1] \"#1B9E77\" \"#D95F02\" \"#7570B3\" \"#E7298A\" \"#66A61E\" \"#E6AB02\" \"#A6761D\"\n## [8] \"#666666\"## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ──## ✓ ggplot2 3.3.5     ✓ purrr   0.3.4\n## ✓ tibble  3.1.6     ✓ dplyr   1.0.8\n## ✓ tidyr   1.2.0     ✓ stringr 1.4.0\n## ✓ readr   2.1.2     ✓ forcats 0.5.1## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n## x dplyr::filter()     masks stats::filter()\n## x dplyr::group_rows() masks kableExtra::group_rows()\n## x dplyr::lag()        masks stats::lag()"},{"path":"viz-color.html","id":"dataviz-mechanism-hcl","chapter":"4 .  색상","heading":"4.2 RGB 색상모형 대안 - HCL","text":"RGB 색공간과 색상모형이 유일무이하고 가장 최고는 아니다.\n컴퓨터 화면에 색상을 표현하는데는 자연스럽지만, 일부 영역에서 색상을 선택하는\n작업에는 이런 모형을 적용하기 어렵다.\n예를 들어, 사람이 구별하기는 쉽지만, 인지적으로 색상별로 비교되는 생각으로 구성된\n정성적인 팔레트를 만들어 내는 방법은 명확하지 않다.\n컴퓨터에 사용되는 색상을 기술하는데 RGB를 사용하지만,\n사람이 색상체계를 구축하는 색공간에 RGB체계를 사용할 이유는 없다.\n이점은 사람과 컴퓨터가 다른 것이고, 이를 인정해야만 된다.색상모형은 일반적으로 RGB와 마찬가지로 세가지 차원으로 구성된다.\n이는 망막에 세가지 다른 수용체를 인간이 갖는 생리적 사실에 기인한다.\nRGB와 인간 시각 체계에 대한 자세한 정보는 블로그를\n참고한다.\n색상모형의 차원이 사람이 인식할 수 있는 식별가능한 정보량에 더 가까이 부합되면 될수록, 더욱 유용하다.\n이런 부합성이 사려깊게 작성된 팔레트 생성을 가능하게 하고, 더불어 특정한 특성을 갖는 색공간에 대한 길을 연다.\nRGB 색체계는 인간의 인식체계와 일치성이 떨어진다.\n적색, 녹색, 청색광을 탐지할 수 있는 광수용체를 갖기 때문에,\n색을 인지하는 체험이 RGB 방식으로 분해된다는 것을 의미하지 않는다.\n적색과 녹색을 섞은 것으로 황색을 인식하는 체험을 했는가?\n물론 아니다. 생리학적인 현실은 그렇다.\n또다른 RGB 대안 모형이 HSV(Hue-Saturation-Value, 색상-채도-명도)모형이다.\n불행하게도, 색을 선택하는데 문제가 많은데, 이유는 색상이 서로 중첩되는 차원을 갖기 때문이다.사람이 인지하기 좋은 색모형은 무엇일까? CIELUV 와 CIELAB 이 가장 잘 알려진 사례다.\nCIELUV의 변종인 HCL(Hue-Chroma-Luminance, 색상-채도-휘도) 모형을 좀더 살펴보자.\nZeileis와 동료들이 R 사용자를 위한 팩키지로 멋지게 작성했다.4\ncolorspace R 팩키지에 딸려있고, HCL 색상모형을 탐색하고 이용하는데 도움을 준다.\n마지막으로, HCL 색모형이 ggplot2에 RColorBrewer와 마찬가지로 잘 녹여져있다.HCL 색상모형의 세가지 차원색상(Hue) : 색상은 일반적으로 “색상이 뭐지?”라고 생각할 때 생각나는 것이다. 이해가 바로되는 쉬운 것이다! 각도로 주어지고 따라서 0 에서 360 까지 값을 갖는데, 무지개 도넛을 상상하면 된다.채도(Chroma) : 채도는 색상이 얼마나 순수한지 혹은 생생한지 나타낸다. 특정 색상이 회색과 섞일 수록, 채도는 떨어진다. 가장 낮은 값은 0 으로 회색 그자체에 대응되고, 최대값은 휘도에 따라 변한다.휘도(Lumiance) : 휘도는 명도(brightness), 명도(Lightness), 광도(intensity), 명도(value)와 관련된다. 낮은 휘도는 어두움을 의미하고, 진짜 검정색은 휘도가 0 이다. 높은 휘도는 밝음을 의미하고, 진짜 흰색은 휘도가 1 이다.저자는 채도와 휘도를 이해하고 구별하는데 힘든 시간을 보냈다. 위에서 살펴봤듯이, 색체계는 서로 독립된 것이 아니고, 3차원 HCL 공간에 기이한 모형으로 정보를 제공하고 있다.위캠의 ggplot2 책에 나온 6.6 그림이 HCL 색공간을 이해하는데 도움이 된다.ggplot2 HCL 색공간위캠 책에 언급된 내용을 다시 적으면 다음과 같다: 각 측면, 창은 휘도에 따라 가장 낮은 값에서 높은 값 순으로 HCL 공간을 슬라이스로 나누어 도식화한 것을 보여주고 있다. 0 과 100 극단 휘도값은 생략되었는데, 이유는 각각 검은 점과 흰점으로 나타나기 때문이다.\n슬라이스 내부에, 중심은 채도가 0 으로, 회색에 대응된다. 슬라이스 끝쪽으로 이동하면,\n채도가 증가하고, 색상이 더 순색에 가까워지고 농도가 짖어진다. 색상은 각도로 매핑된다.colorspace 팩키지에 가치있는 기여는 아마도 함수를 사용해서 색상공간을 합리적 방식으로 색공간을 이리저리 돌아다닐 수 있게 만든 것이다.\n이와는 대조적으로 RColorBrewer 팩키지가 제공하는 팔레트는 정교하게 제작되었지만, 불행히도 고정이다.인지기반 색상체계를 사용하는 것에 대한 옹호 사례와 더불어 색공간에 0 이 자리하는 것을 알려주는 중요성을 시연하고 있다.“Engineers Scientists Worried Color?”","code":""},{"path":"viz-color.html","id":"viz-printer-cmyk","chapter":"4 .  색상","heading":"4.3 프린터 색상모형: CMYK 5 6","text":"CMYK 색상표는 시안(Cyan), 마젠타(Magenta), 옐로(Yellow), 블랙(Black = Key)를 원색으로 하여 명도가 낮아지는 감산혼합으로 주로 출력물 인쇄 혹은 사진 필림 현상에 사용되며 쿼크익스프레스, 일러스트레이터, 포토샵 등에서 CMYK 감산혼합을 지원한다. 현실적인 문제 때문에 RGB나 HSB(HSV)보다 표현 가능한 색이 적은 것으로 알려져 있다.학창시절 감산혼합의 색의 3원색은 빨강, 노랑, 파랑인데, CMYK는 생뚱맞게도 시안(Cyan), 마젠타(Magenta), 옐로(Yellow), 블랙(Black = Key)을 원색으로 하는데 이유는 빨강은 사실 자홍색(마젠타), 파랑은 청록색(시안)이라 정확한 색상이 후자가 맞다. 우리가 잘못 배운 탓이 크다.RGB 생상과 CMYK 생상을 PDF 파일로 찍어 상호 비교해보자. 7RGB 색상 출력CMYK 색상 출력","code":"\npdf(\"data/color_rgb.pdf\")\nRColorBrewer::display.brewer.all(type=\"qual\")\ndev.off()\npdf(\"data/color_cmyk.pdf\", colormodel = \"cmyk\")\nRColorBrewer::display.brewer.all(type=\"qual\")\ndev.off()"},{"path":"viz-color.html","id":"dataviz-color-brewer-viridis","chapter":"4 .  색상","heading":"4.4 RColorBrewer 와 viridis","text":"","code":""},{"path":"viz-color.html","id":"dataviz-color-brewer","chapter":"4 .  색상","heading":"4.4.1 RColorBrewer","text":"색상선택이 가장 논란이 많고, 이리저리 만지작 거리면서 정말 많은 시간을 보내는 분야다.\n지리학자이며 생상 전문가 Cynthia Brewer 교수가 출판과 웹에서 사용되는 색상표를 제작했고, 이는 RColorBrewer\n팩키지에 반영되어 있다. 팩키지를 설치하고 사용하면 된다. 연관된 전체 팔레트를 살펴보는 명령어는 display.brewer.() 이다.팔레트는 종류가 많지만 다음 세가지 범주에 속한다. 위에서 아래부터 다음과 같다.순차적(sequential) : 낮은 것에서 높은 것으로 한쪽 극단이 흥미롭고 반대쪽 극단이 재미없는 것을 시각화하는데 매우 좋다.\n예를 들어 p-값, 상관계수 (주의: 상관계수 1 이 흥미로운 것은 양수를 가정했다)정량적(quantitative) : 순서가 없는 범주형 자료를 시각화할 때 유용하다. 예를 들어, 국가나 대륙.\n특수한 “쌍을 이룬” 팔레트가 있다; 예를 들어, 곡물 밀 유형같이 실험이 아닌 요인, 실험군과 대조군 같은 이진 실험 요인.발산하는(diverging) : 극단의 음수에서 극단의 양수까지 범위를 같는 것을 시각화하는데 유용한다.\n이런 데이터는 극단의 값이 중간에 위치한 덜 흥미로운 지점을 지난다. 예를 들어, t-통계량, z-점수, 상관계수가 이에 속한다.명칭을 명세해서 RColorBrewer 팔렛트 하나만 볼 수 있다.","code":"\nlibrary(RColorBrewer) # install.packages(\"RColorBrewer\")\ndisplay.brewer.all()\ndisplay.brewer.pal(n = 8, name = 'Dark2')"},{"path":"viz-color.html","id":"dataviz-viridis","chapter":"4 .  색상","heading":"4.4.2 viridis","text":"2015년 Stéfan van der Walt 와 Nathaniel Smith는 파이썬 matplotlib 팩키지에 사용될\n새로운 색상 지도를 설계했고, SciPy 2015에서 발표했다.\nviridis 팩키지로 인해 R에 4가지 신규 팔레트가 추가되었다. CRAN과,\nGitHub에서 팩키지를 만날 수 있다.viridis 색상표는 완벽하게 균등하게 지각되도록 설계되었고, 정규형식에서나 흑백으로 전환되었을 때도 마찬가지다. 또한 색망을 갖는 독자도 올바르게 지각될 수 있도록 설계되었다.아직 나온지 얼마되지 않아서, 자세한 사항은 viridis 팩키지를 설치하고 소품문을\n읽고 직접 경험하기 바란다.","code":""},{"path":"viz-color.html","id":"dataviz-viridis-blind","chapter":"4 .  색상","heading":"4.4.3 색맹을 갖는 사람","text":"dichromat 팩키지(CRAN)는\n2색시자에 대한 효과적인 색상조합을 선택하는데 도움이 된다.colorschems 목록에는 17 가지 색상조합이 담겨있는데, 적색과 녹색을 구별하는 능력이 없거나 예외적인 시력을 갖는 2색시자에게 적합하다.dichmat() 함수는 색상을 변환해서 다른 형태의 색맹에 근사적인 효과를 구현할 수 있어서,\n후보 색상조합에 대한 효과를 평가할 수 있게 한다.\ndata(\"dalton\") 명령어는 256 색상 팔레트를 표현하는 객체를 생성하는데,\n정상 시야로 표현되는 것과, 적록(red-green) 색맹과 청녹(green-blue) 생맹으로 표현되는 것이다.(Rogowitz Treinish 1996)","code":"\nlibrary(dichromat) # install.packages(\"dichromat\")"},{"path":"ggplot-component.html","id":"ggplot-component","chapter":"5 .  시각화 구성요소","heading":"5 .  시각화 구성요소","text":"깔끔한 데이터(tidy data)가 준비되면 이를 시각화하기 위해서는 데이터를 시각화 객체에 매핑하게 되는 메커니즘이 필요하다.\n주요 구성요소로 시각적 매핑(Aesthetics), 척도(Scale), 좌표계(Coordiate System), 축(Axis) 등이 필요하다.","code":""},{"path":"ggplot-component.html","id":"ggplot-aesthetics","chapter":"5 .  시각화 구성요소","heading":"5.1 시각적 매핑(Aesthetics)","text":"ggplot에서 시각적 매핑(Aesthetics)는 aes() 내에 시각적으로 표현되는 모든 것을 담고 있다.\n시각화 대상은 크게 두가지로 나눠지는데 연속형과 범주형이다. 온도나 몸무게 같은 경우는 특정 두 데이터 값 사이 연속된 값이 있지만,\n수학에서 정수와 같이 표현되는 쪼갤 수 없는 경우는 국가를 생각하면 한국과 미국 사이 존재하는 값이 없다.\n시각화를 할 경우 위치(position), 모양(shape), 크기(size), 색상(color), 선굵기(line width), 선유형(line type)을 사용하여 좌표계(coordinate system), 척도(scale)와 결합하여 최종 시각화 결과물을 제작된다. Claus Wilke 시각화 책에 언급된 다양한 시각적 매핑을 통해 효과적으로 데이터의 정보를 표현할 수 있다.(Wilke 2019) 당연히 위치, 모양, 크기, 색상, 선굵기, 선유형 중 어떤 것을 사용하느냐에 따라 시각화로 전달되는 정보의 양은 달라진다. 예를 들어, 위치는 시각적 변별력이 선 유형보다 크다.\n그림 5.1: 위치, 모양, 크기, 색상, 선굵기, 선유형 등 시각적 매핑\n","code":""},{"path":"ggplot-component.html","id":"scale-mapping","chapter":"5 .  시각화 구성요소","heading":"5.2 척도 매핑","text":"데이터가 주어지면 시각적 객체(모양, 색상, 크기 등)와 매핑을 해야 되는데 그 둘 사이를 연결하는 것이 척도(Scale)이다.\nx축과, y축 척도에 시각적 객체를 매핑해야 비로서 데이터 값을 그래프로 표현된다.\n척도에 위치가 지정되면 시각적 매핑 객체를 다양하게 표현할 수 있다. 만약 위치가 척도에 모호하게 표현되게 되면\n시각적 객체가 제대로 그래프에 표현되는데 문제가 된다.\n그림 5.2: 시각적 객체 척도 매핑\n","code":""},{"path":"ggplot-component.html","id":"coordinate","chapter":"5 .  시각화 구성요소","heading":"5.3 좌표계","text":"데이터 시각화에서 앞서 데이터를 척도와 시각적 객체로 준비를 했다면 이를 최종 그래프로 제작하기 위해서는 좌표계가 필요하다.\n네이버 사전에서 좌표계는 공간상의 한 점의 위치를 표시하는 숫자들의 순서쌍인 좌표를 정하기 위한 체계로서, 원점과 기준 길이, 기준 축이나 기준선들의 집합을 통틀어 이르는 말이다. 가장 널리 사용되는 좌표계는 데카르트 직각좌표계와 극좌표계가 널리 사용된다.\n다음은 mtcars 데이터 차량 기통수를 막대그래프와 원그래프를 사용하여 동일한 내용을 좌표계만 달리하여 시각적으로 표현해따.\n그림 5.3: 직교좌표계와 극좌표계\n","code":""},{"path":"ggplot-component.html","id":"coordinate","chapter":"5 .  시각화 구성요소","heading":"5.4 축(axis)","text":"데이터 값을 선형 척도에 매핑하여 시각화하는 것이 일반적이지만 x, y 축이\n대표적으로 날짜와 같은 시계열 데이터인 경우 혹은 시분초를 나타내는 경우도 있어 이에 맞춰\n적절히 축을 맞춰야 한다. 덧셈이 아니라 곱셈에 대해 선형인 경우 로그변환을 취하여\n데이터 본연의 척도를 반영하도록 축을 조정한다. 많이 사용되는 로그 변환의 경우\n밑을 10으로 하는 상용로그와 자연로그가 있어 명확히 축라벨에 적시하여 혼동을 피하는 것이 좋다.\n로그 변환시 0이 있는 경우 문제가 되기 때문에 sqrt() 변환도 로그변환이 갖는 표현법의 장점을\n갖추면서도 로그변환 시 생기는 번거러움을 해소하기 자주 사용된다.\n그림 5.4: 선형, 로그, 제곱근 축\n","code":""},{"path":"tidy-data.html","id":"tidy-data","chapter":"6 .  깔끔한 데이터","heading":"6 .  깔끔한 데이터","text":"","code":""},{"path":"시각화.html","id":"시각화","chapter":"시각화","heading":"시각화","text":"","code":""},{"path":"ggplot.html","id":"ggplot","chapter":"7 .  그래프 문법","heading":"7 .  그래프 문법","text":"","code":""},{"path":"ggplot.html","id":"why-ggplot2","chapter":"7 .  그래프 문법","heading":"7.1 그래프 문법의 존재이유","text":"Leland Wilkinson의 “Grammar Graphics”는 1999년 첫 출간된 이후 데이터 그래픽(data graphics)에 많은 영향을 주어 ggplot2, Polaris → Tableau, Vega-Lite 등의 형태로 우리곁에 다가섰다.\n기존 데이터를 시각화한 다양한 그래픽 객체를 만드려면 각 그래픽 객체별로 따로 사용법을 익혀야만 되었다.\n이것이 갖는 한계는 그래프 종류가 적은 경우 유용하지만 그래프 종류가 많아지면 매번 따로 사용법을 배워야되서\n확장가능성이 무척 떨어지게 된다.\n그래서, 이를 일반화한 무언가 필요한데 데이터 그래픽 객체를 분해해서 8개 계층으로 분해하여 조립하여\n그래프를 제작하게 되면 앞선 문제를 일거에 해소할 수 있다.\n그래프 문법(grammar graphics)을 통해 데이터를 가장 잘 표현할 수 있는 그래프를 생성할 수 있게 되었다.ggplot이 필요한 이유","code":""},{"path":"ggplot.html","id":"ggplot2-steps","chapter":"7 .  그래프 문법","heading":"7.2 그래프 문법","text":"그래프 문법은 총 8가지 층으로 구성되어 있는데 이를 각 층별로 나눠보면 다음과 같다.","code":""},{"path":"ggplot.html","id":"ggplot2-steps-data","chapter":"7 .  그래프 문법","heading":"7.2.1 데이터(Data)","text":"그래프 문법 ggplot에 데이터는 깔끔한 데이터(tidy data)를 가정한다. 이를 위해서 기존 wide형태 데이터는 key-value long 형태로 바뀌어 준비한다.깔끔한 데이터 wide, long 데이터","code":""},{"path":"ggplot.html","id":"ggplot2-steps-mapping","chapter":"7 .  그래프 문법","heading":"7.2.2 매핑(Mapping)","text":"깔끔한 데이터가 준비되면 다음 단계로 칼럼에 해당되는 각 변수를 aes() 함수를 사용해서 aes(x=x, y=y, color=z, ...)와 같은 방식으로 데이터와 그래프를 매핑한다.데이터를 그래프에 매핑","code":""},{"path":"ggplot.html","id":"ggplot2-steps-statistics","chapter":"7 .  그래프 문법","heading":"7.2.3 통계량(statistics)","text":"범주형 그래프를 시각화할 경우 빈도수를 통계량으로 계산해놔야 하고, 연속형 변수를 히스토그램으로 표현할 때도 마찬가지 방식으로 구간별 빈도수를 계산해놔야 하고, 특히 상자그림(boxplot)을 시각화할 경우 각 분위수는 물론이고 중위수도 및 interquantile도 계산해서 수염의 끝도 계산해놔야 제대로된 상자그림을 시각화할 수 있다.그래프별 기본설정 통계량","code":""},{"path":"ggplot.html","id":"ggplot2-steps-scales","chapter":"7 .  그래프 문법","heading":"7.2.4 척도(scales)","text":"X축, Y축의 척도를 그래프에서 자동으로 인식하는데는 한계가 있어 이를 필요한 경우 적절한 형태로 설정한다. scale_<x, y, color, fill, ...>_<유형>() 구문을 갖는다. 예를 들어 Y축을 담당하는 변수가 로그척도(log)가 적합한 경우 이를 scale_y_log10()와 같이 변수를 특성을 반영한 척도를 설정한다. 변수가 날짜나 시간인 경우 scale_x_date(), scale_x_datetime()을 활용하여 적절한 형태로 설정한다.aes 매핑된 축 척도지정","code":""},{"path":"ggplot.html","id":"ggplot2-steps-geometries","chapter":"7 .  그래프 문법","heading":"7.2.5 기하형상(geometries)","text":"예를 들어, 범주형 변수를 aes()로 지정하고 이를 적절한 그래프로 표현하기 위한 결정과정으로 geom_*() 방식으로 원그래프, 막대그래프, 점그래프 등으로 변수를 시각화객체로 지정한다.기하형상 지정","code":""},{"path":"ggplot.html","id":"ggplot2-steps-facet","chapter":"7 .  그래프 문법","heading":"7.2.6 작은 창(facet)","text":"원본 데이터를 그룹으로 쪼개 작은 창에 동일한 시각화 객체를 표현하는 방법으로 다차원 데이터를 차원별로 나눠 볼 수 있다. 중요한 점은 각 작은 창이 동일한 유형의 그래프라는 점이 중요하다.그룹으로 쪼갠 작은 창(facet)","code":""},{"path":"ggplot.html","id":"ggplot2-steps-coordinate","chapter":"7 .  그래프 문법","heading":"7.2.7 좌표계(coordinate)","text":"깔끔한 데이터를 그래프에 매칭하여 시각화한 후에 경우에 따라서 좌표계를 변경할 경우가 있다. coord_fixed(), coord_polar(), coord_flip() 등을 사용해서 특정 영역 확대, 데카르트 좌표계에서 극좌표계, X-Y 축 변경 등의 작업을 수행할 수 있다.좌표계 변환","code":""},{"path":"ggplot.html","id":"ggplot2-steps-theme","chapter":"7 .  그래프 문법","heading":"7.2.8 분위기 풍(theme)","text":"분위기 풍(theme)은 앞선 깔끔한 데이터를 시각화 객체로 변환시키는 과정과 아무런 연관이 없다. 대신 외양을 보기좋게 하는 역할을 수행한다. 즉, 시각화에 알맞는 색상 팔레트를 적용시키고, 글꼴을 바꾸는 작업이 여기에 해당된다.tufte 분위기 풍(theme)","code":""},{"path":"ggplot.html","id":"ggplot2-steps-extension","chapter":"7 .  그래프 문법","heading":"7.3 ggplot 확장","text":"기본 ggplot 그래프 객체를 갖게 되면 2개 이상의 그래프를 합치거나 배열을 달리하고,\n강조를 하고 주석(annotation)을 달고 애니메이션과 인터랙티브 기능을 추가하여 확장시킬 수 있다.","code":""},{"path":"사례.html","id":"사례","chapter":"8 .  사례","heading":"8 .  사례","text":"","code":""},{"path":"references-1.html","id":"references-1","chapter":"References","heading":"References","text":"GitHub 저장소 : clauswilke/dataviz","code":""}]
